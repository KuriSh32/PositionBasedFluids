#version 430 core

layout(local_size_x = 256) in;

layout(std430, binding = 2) buffer Velocity {
    vec4 velocity[];
};

uniform uint uParticleCount;
uniform float uDeltaVelocity;

uniform int uLeft;
uniform int uRight;
uniform int uUp;
uniform int uDown;
uniform int uFront;
uniform int uBack;


void main() {
    uint index = gl_GlobalInvocationID.x;
    if (index >= uParticleCount) {
        return;
    }

    if (uLeft == 1) {
        velocity[index].x -= uDeltaVelocity;
    }
    if (uRight == 1) {
        velocity[index].x += uDeltaVelocity;
    }
    if (uUp == 1) {
        velocity[index].y += uDeltaVelocity;
    }
    if (uDown == 1) {
        velocity[index].y -= uDeltaVelocity;
    }
    if (uFront == 1) {
        velocity[index].z -= uDeltaVelocity;
    }
    if (uBack == 1) {
        velocity[index].z += uDeltaVelocity;
    }
}
